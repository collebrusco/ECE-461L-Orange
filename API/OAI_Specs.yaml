# Paste in https://editor.swagger.io/ to see what it looks like
openapi: 3.0.3
info:
  title: ECE_461L - OpenAPI
  description: |-
    This is the rough specifications for what our API will be doing
  version: 1.0.01
externalDocs:
  description: Google Drive Link
  url: https://drive.google.com/drive/u/2/folders/1R8sgbDksbZiwOycuF396ZUm8Dv0tAQy7
servers:
  - url: our_server_here.com
tags:
  - name: Front End
    description: This is where the API will send data to for the user to see
  - name: User Management
    description: Goes through encryption first then User Management
  - name: Resource Management
    description: Operations about resources
paths:
  /Front_End/User_Info/{user_id}:
    put:
      tags:
        - Front End
      summary: Update 
      description: Update an user by Id
      operationId: updateUser
      parameters:
        - name: user_id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existent User
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - write:users
            - read:users
  /Front_End/User_Info:  
    post:
      tags:
        - Front End
      summary: Add a new user
      description: Add a user
      operationId: addUser
      requestBody:
        description: Create a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - write:users
            - read:users
  /User/{userId}:
    get:
      tags:
        - User Management
      summary: Find user by ID
      description: Returns a single user
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
      security:
        - api_key: []
        - petstore_auth:
            - write:users
            - read:users
  /User: 
    put:
      tags:
        - User Management
      summary: Update 
      description: Update an user by Id
      operationId: updateUser
      requestBody:
        description: Update an existent User
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - write:users
            - read:users
    post:
      tags:
        - User Management
      summary: Add a new user
      description: Add a user
      operationId: addUser
      requestBody:
        description: Create a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - write:users
            - read:users
components:
  schemas:
    User:
      required:
        - name
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: John Cena
      xml:
        name: User
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    User:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
        application/xml:
          schema:
            $ref: '#/components/schemas/User'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://idk_man.com
          scopes:
            write:users: modify users in your account
            read:users: read your users
    api_key:
      type: apiKey
      name: api_key
      in: header