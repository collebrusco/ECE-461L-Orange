openapi: 3.0.3
info:
  title: ECE-461L-Orange
  description: Team project for UT ECE 461L
  version: 1.0.0
externalDocs:
  description: Google Drive
  url: https://drive.google.com/drive/folders/1R8sgbDksbZiwOycuF396ZUm8Dv0tAQy7?usp=sharing
servers:
  - url: https://teamorange.duckdns.org/api
tags:
  - name: Users
    description: Operations about users
  - name: Projects
    description: Operations about projects
  - name: Resources
    description: Operations about resources
paths:
  # Users
  /users:
    post:
      tags:
        - Users
      summary: Register a new user
      operationId: register
      requestBody:
        $ref: '#/components/requestBodies/Credentials'
      responses:
        '201':
          description: Register successfully
        '400':
          description: Invalid credentials
        '409':
          description: User already registered
        '500':
          $ref: '#/components/responses/ServerErrorResponse'
  /users/login:
    post:
      tags:
        - Users
      summary: Login with credentials
      operationId: login
      requestBody:
        $ref: '#/components/requestBodies/Credentials'
      responses:
        '204':
          description: Login successfully
        '401':
          description: Login failed
        '500':
          $ref: '#/components/responses/ServerErrorResponse'
  /users/logout:
    post:
      tags:
        - Users
      summary: Log out current user identified by JWT
      operationId: logout
      security:
        - JWTAuth: []
      responses:
        '204':
          description: Logout successfully
        '401':
          description: JWT Token is missing or invalid
        '500':
          $ref: '#/components/responses/ServerErrorResponse'
  /users/profile:
    get:
      tags:
        - Users
      summary: Get profile for current user identified by JWT
      operationId: getProfile
      security:
        - JWTAuth: []
      responses:
        '200':
          description: Get profile successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: JWT Token is missing or invalid
        '500':
          $ref: '#/components/responses/ServerErrorResponse'

  # Projects
  /projects:
    get:
      tags:
        - Projects
      summary: Get the list of projects for current user identified by JWT
      operationId: getProjects
      security:
        - JWTAuth: []
      responses:
        '200':
          description: Get projects successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '401':
          description: JWT Token is missing or invalid
        '500':
          $ref: '#/components/responses/ServerErrorResponse'
    post:
      tags:
        - Projects
      summary: Create a new project for current user identified by JWT
      operationId: createProjects
      security:
        - JWTAuth: []
      requestBody:
        $ref: '#/components/requestBodies/ProjectInit'
      responses:
        '201':
          description: Project created successfully
        '400':
          description: Invalid project info
        '401':
          description: JWT Token is missing or invalid
        '409':
          description: Project has a conflicting name
        '500':
          $ref: '#/components/responses/ServerErrorResponse'
  /projects/{project_title}/users:
    post:
      tags:
        - Projects
      summary: Add current user identified by JWT to the project
      operationId: joinProject
      security:
        - JWTAuth: []
      parameters:
        - $ref: '#/components/parameters/project_title'
      responses:
        '201':
          description: User added to the project successfully
        '401':
          description: JWT Token is missing or invalid
        '404':
          description: Project does not exist
        '500':
          $ref: '#/components/responses/ServerErrorResponse'

  # Resources
  /resources:
    get:
      tags:
        - Resources
      summary: Get the list of all resources
      responses:
        '200':
          description: Get projects successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
        '500':
          $ref: '#/components/responses/ServerErrorResponse'
  /resources/{resource_title}/checkin:
    post:
      tags:
        - Resources
      summary: Check in by some amount on the behalf of specified project
      operationId: checkin
      security:
        - JWTAuth: []
      parameters:
        - $ref: '#/components/parameters/resource_title'
      requestBody:
        $ref: '#/components/requestBodies/CheckInOutInfo'
      responses:
        '204':
          description: Check in successfully
        '400':
          description: Check in too many or illegal value
        '401':
          description: JWT Token is missing or invalid
        '403':
          description: User identified by JWT not in project
        '404':
          description: Resource/Project not found
        '500':
          $ref: '#/components/responses/ServerErrorResponse'
  /resources/{resource_title}/checkout:
    post:
      tags:
        - Resources
      summary: Check out by some amount on the behalf of specified project
      operationId: checkout
      security:
        - JWTAuth: []
      parameters:
        - $ref: '#/components/parameters/resource_title'
      requestBody:
        $ref: '#/components/requestBodies/CheckInOutInfo'
      responses:
        '204':
          description: Check out successfully
        '400':
          description: Check out too many or illegal value
        '401':
          description: JWT Token is missing or invalid
        '403':
          description: User identified by JWT not in project
        '404':
          description: Resource/Project not found
        '500':
          $ref: '#/components/responses/ServerErrorResponse'

components:
  schemas:
    UserProfile:
      type: object
      properties:
        username:
          type: string
          example: spenc
        created_at:
          type: string
          format: date-time
          example: "2017-07-21T17:32:28Z"
    Credentials:
      type: object
      properties:
        username:
          type: string
          example: spenc
        password:
          type: string
          example: pa55w0rd
    Project:
      type: object
      properties:
        title:
          type: string
          example: Project 1
        description:
          type: string
          example: This is the description of Project 1
        users:
          type: array
          items:
            type: string
          example: ["Mimi", "Frank", "Ayan"]
        creator:
          type: string
          example: Mimi
        resources:
          type: object
          example: {
              "HW Set 1": 3,
              "HW Set 2": 2
          }
    ProjectInit:
      type: object
      properties:
        title:
          type: string
          example: Project 1
        description:
          type: string
          example: This is the description of Project 1
    Resource:
      type: object
      properties:
        title:
          type: string
          example: HW Set 1
        capacity:
          type: integer
          example: 100
        availability:
          type: integer
          example: 30
    CheckInOutInfo:
      type: object
      properties:
        project_title:
          type: string
          example: Project 1
        amount:
          type: integer
          example: 10
  parameters:
    project_title:
      name: project_title
      in: path
      required: true
      schema:
        type: string
      example: Project 1
    resource_title:
      name: resource_title
      in: path
      required: true
      schema:
        type: string
      example: HW Set 1
  requestBodies:
    Credentials:
      description: JSON object containing authentication credentials
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Credentials'
    ProjectInit:
      description: JSON object containing project information
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectInit'
    CheckInOutInfo:
      description: JSON object containing checkin/checkout information
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckInOutInfo'
  responses:
    ServerErrorResponse:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unhandled exception raised
  securitySchemes:
    JWTAuth:
      type: apiKey
      in: cookie
      name: auth_jwt